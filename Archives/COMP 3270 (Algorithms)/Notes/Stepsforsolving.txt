Part 1: Algorithm Design
  1. Define the problem
  2. Come up with a solution strategy
  3. Develop the algorithm
    1. Find and understand existing solutions
    2. If it doesn't exist, find a similar algorithm and modify it
    3. Design proprietary algorithm

Part 2: Algorithm Analysis
  1.


Recursive Algorithm Design
  - Divide and Conquer (Recursive)
    - Divide input into partitions, then solve sub-problems

nxn Boggle Lite: Horizontal and vertical moves

P L A Y
T H I S
W O R D
G A M E

Problem Specs:
  in: A "nxn" array of chars, a dictionary lookup function isWord('word') ==> True
  out: Array of strings containing all words that exist in boggle and dict.
  Correctness Criteria: No more valid English words in the set of all possible words in i/p - Dictionary
